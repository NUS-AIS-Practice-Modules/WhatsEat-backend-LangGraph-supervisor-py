[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[project]
name = "langgraph-supervisor"
version = "0.0.29"
description = "An implementation of a supervisor multi-agent architecture using LangGraph"
authors = [
    {name = "Vadym Barda", email = "19161700+vbarda@users.noreply.github.com "}
]
license = "MIT"
license-files = ["LICENSE"]
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "langgraph>=0.6.0,<0.7.0",
    "langchain-core>=0.3.40",
    "pytest>=8.4.1",
    "langchain-openai>=0.3.33",
    "langchain>=0.3.27",
    "neo4j>=5.0.0",
    "pinecone-client>=3.0.0",
    "openai>=1.0.0",
    "requests>=2.31.0",
    "google-api-python-client>=2.0.0",
    "google-auth-httplib2>=0.1.0",
    "google-auth-oauthlib>=1.0.0",
    "langgraph-api==0.4.39",
]

[dependency-groups]
dev = [
    "langgraph-cli[inmem]>=0.4.3",
]
test = [
    "pytest>=8.0.0",
    "ruff>=0.9.4",
    "mypy>=1.8.0",
    "pytest-socket>=0.7.0",
    "types-setuptools>=69.0.0",
]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q -v"
testpaths = [
    "tests",
]
python_files = ["test_*.py"]
python_functions = ["test_*"]

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
]
ignore = [
  "E501" # line-length
]


[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true

[tool.ty.rules]
no-matching-overload = "ignore" 
call-non-callable = "ignore"
unresolved-import = "ignore"
[tool.ty.src]
exclude = ["tests"]
